<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\TimeOff;
use App\Models\LevelJabatan;
use App\Models\Karyawan;
use App\Models\Presensi;
use App\Models\User;
use Auth;
use Illuminate\Support\Facades\DB;
use DateTime;

class TimeOffController extends Controller
{
    public function index()
    {
        $tmf = TimeOff::paginate(10);
        $ayeuna = new DateTime(date('d-m-Y'));
        $now = $ayeuna->format('d/m/Y');
        return view('timeoff.index', compact('tmf','now'));
    }
    public function levjab()
    {
        $id_user = Auth::user();
        $lm =  Karyawan::where('fk_user', $id_user->id)->get()->last();
        $level_jab = $lm->fk_level_jabatan;
        $tmlead = LevelJabatan::where('parent_id','=',$level_jab)->first();
        $offs = DB::table("time_offs")
            ->leftJoin("karyawans", function($join){
	        $join->on("karyawans.id", "=", "time_offs.id_karyawan");
        })
            ->leftJoin("level_jabatans", function($join){
	        $join->on("level_jabatans.id", "=", "karyawans.fk_level_jabatan");
        })
            ->select("karyawans.nama_lengkap","time_offs.id","time_offs.tanggal","time_offs.statusoff")
            ->where("level_jabatans.parent_id", "=", $level_jab)
        ->get();
  
        return view('timeoff.list_off', compact('offs'));
    }

    public function approvetimeoff(Request $request, $id)
    {
        $this->validate($request, [
            'tanggal_approve' => 'required',
            'statusapprove'       => 'required', ##Approved, Reject
        ]);
        $ver_awal = TimeOff::where('id', $id)->get()->last();
        $ver_awal->tanggal_approve  = $request->tanggal;
        $ver_awal->notes  = $request->notes;
        $ver_awal->statusoff    = $request->statusapprove;
        $ver_awal->save();
        return new TimeOffResource(true, 'Data Presensi Berhasil Ditambahkan!!', $ver_awal);
        #return new TimeOffResource(true, 'Data TimeOff Berhasil Ditambahkan!', $savetime);
    }

    public function read($id)
    {
        $data = TimeOff::where('id_karyawan', $id)->orderBy('id', 'DESC')->get();
        return view('timeoff.read')->with(['data'=>$data]);
    }

    public function readall()
    {
        // $data = TimeOff::orderBy('id', 'DESC')->get();
        $id_user = Auth::user();
        $lm =  Karyawan::where('fk_user', $id_user->id)->get()->last();
        $level_jab = $lm->fk_level_jabatan;
        $tmlead = LevelJabatan::where('parent_id','=',$level_jab)->first();
        $offs = DB::table("time_offs")
            ->leftJoin("karyawans", function($join){
	        $join->on("karyawans.id", "=", "time_offs.id_karyawan");
        })
            ->leftJoin("level_jabatans", function($join){
	        $join->on("level_jabatans.id", "=", "karyawans.fk_level_jabatan");
        })
            ->select("karyawans.nama_lengkap", "karyawans.nomor_induk_karyawan", "time_offs.id","time_offs.tanggal","time_offs.statusoff", "time_offs.status_approve" , "time_offs.dokumen")
            ->where("level_jabatans.parent_id", "=", $level_jab)
	    ->where('time_offs.status_approve','=','PengajuanOff')
            ->where('karyawans.fk_bagian','=', $lm->fk_bagian)
        ->get();

        
        return view('timeoff.readAll')->with(['data'=>$offs]);
    }

    public function readallapprove()
    {
        // $data = TimeOff::orderBy('id', 'DESC')->get();
        $id_user = Auth::user();
        $lm =  Karyawan::where('fk_user', $id_user->id)->get()->last();
        $level_jab = $lm->fk_level_jabatan;
        $tmlead = LevelJabatan::where('parent_id','=',$level_jab)->first();
        $offs = DB::table("time_offs")
            ->leftJoin("karyawans", function($join){
	        $join->on("karyawans.id", "=", "time_offs.id_karyawan");
        })
            ->leftJoin("level_jabatans", function($join){
	        $join->on("level_jabatans.id", "=", "karyawans.fk_level_jabatan");
        })
            ->select("karyawans.nama_lengkap", "karyawans.nomor_induk_karyawan", "time_offs.id","time_offs.tanggal","time_offs.statusoff", "time_offs.status_approve", "time_offs.dokumen")
            ->where("level_jabatans.parent_id", "=", $level_jab)
            ->where('time_offs.status_approve','=','Approve')
            ->where('karyawans.fk_bagian','=', $lm->fk_bagian)
        ->get();

        #dd($off);
        return view('timeoff.list_approve_reject')->with(['data'=>$offs]);
    }

    public function readallreject()
    {
        // $data = TimeOff::orderBy('id', 'DESC')->get();
        $id_user = Auth::user();
        $lm =  Karyawan::where('fk_user', $id_user->id)->get()->last();
        $level_jab = $lm->fk_level_jabatan;
        $tmlead = LevelJabatan::where('parent_id','=',$level_jab)->first();
        $offs = DB::table("time_offs")
            ->leftJoin("karyawans", function($join){
	        $join->on("karyawans.id", "=", "time_offs.id_karyawan");
        })
            ->leftJoin("level_jabatans", function($join){
	        $join->on("level_jabatans.id", "=", "karyawans.fk_level_jabatan");
        })
            ->select("karyawans.nama_lengkap", "karyawans.nomor_induk_karyawan", "time_offs.id","time_offs.tanggal","time_offs.statusoff", "time_offs.status_approve", "time_offs.dokumen")
            ->where("level_jabatans.parent_id", "=", $level_jab)
            ->where('time_offs.status_approve','=','Reject')
            ->where('karyawans.fk_bagian','=', $lm->fk_bagian)
        ->get();

        #dd($off);
        return view('timeoff.list_approve_reject')->with(['data'=>$offs]);
    }


    public function create() {
        return view('timeoff.create');
    }

    public function showupdate($id)
    {
        $data = TimeOff::findorfail($id);
        return view('timeoff.showedit')->with(['data'=>$data]);
    }
    // Simpan data Approve
    public function approve(Request $request, $id)
    {      
        $validator = \Validator::make($request->all(), [
        'tanggal'     => 'required',
        'nama'        => 'required',
        'stsapp'      => 'required',
        'id_karyawan' => 'required',
        'notes'       => 'required',
         ]);
        $data = TimeOff::findorfail($id);      
        $data->notes = $request->notes;
        $data->status_approve = $request->stsapp;
        $data->save();
    }
    // Tampilkan data Approve
    public function showreject($id)
    {
        $data = TimeOff::findorfail($id);
        return view('timeoff.showreject')->with(['data'=>$data]);
    }

    // Simpan data Reject
    public function reject(Request $request, $id)
    {      
        $validator = \Validator::make($request->all(), [
        'tanggal'       => 'required',
        'nama'          => 'required',
        'stsapp'        => 'required',
        'id_karyawan'   => 'required',
        'notes'         => 'required',
            ]);
        $data = TimeOff::findorfail($id);      
        $data->notes = $request->notes;
        $data->status_approve = $request->stsapp;
        $data->save();
    }


    public function reqtimeoff($id) {
        $data = TimeOff::where('id_karyawan', $id)->orderBy('id', 'DESC')->get();
        return view('timeoff.timeoffkar')->with(['data'=>$data]);
    }

    public function store(Request $request)
     {
        $validator = \Validator::make($request->all(), [
        'tanggal'     => 'required',
        'statusoff'   => 'required',
        'dokumen'     => 'image|nullable|max:19999999',/*If commented, validation passes.*/
        'id_karyawan' => 'required',
        ]);


	$cekabsen = Presensi::where(['id_karyawan' => $request->id_karyawan, 'tanggal' => $request->tanggal])->get()->last();	
        if($cekabsen == Null){
           return response()->json(['message' => 'Presensi Belum Terdaftar', 'code' => 'warning'], 200);
        }else{
            $image_name          = $request->id_karyawan.'_'.$request->statusoff.'_'.$request->tanggal.'_'.$request->dokumen->getClientOriginalName();
            $file 	         = $request->file('dokumen');
            $filePath            = $file->storeAs('berkastimeoff', $image_name);
            $data['tanggal']     = $request->tanggal;
            $data['statusoff']   = $request->statusoff;
	    $data['dokumen']     = $image_name;
            $data['id_karyawan'] = $request->id_karyawan;
            $data['status_approve'] = 'PengajuanOff';
            TimeOff::insert($data);
	    #TimeOff::create(['statusoff' => $request->statusoff ]);
	    return response()->json(['message' => 'Pengajuan Off Berhasil!! ', 'code' => 'success'], 200);
	  }
     }

}

// class VerifikasiController extends Controller
// {
//     public function index()
//     {
//         $tmf = TimeOff::all();
//         return view('timeoff.index', compact('tmf'));
//     }
// }


